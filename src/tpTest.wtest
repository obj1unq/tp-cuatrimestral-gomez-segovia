import tpGrupal.*

describe "test de capos y recursos" {
	
    
	var bandoDelSur = new Bandos (tesoro = 100, reservaDeMateriales = 50)
    var bandoDelNorte = new Bandos (tesoro = 200, reservaDeMateriales = 200)
	var rolando = new Capo( bando = bandoDelSur, lucha = 1, hechiceria = 3, equipo = #{} , estaVivo=true)
	var caterina = new Capo( bando = bandoDelSur, lucha = 1, hechiceria = 3, equipo = #{}, estaVivo=true)
	var archibaldo = new Capo(bando = bandoDelNorte, lucha = 3, hechiceria = 3, equipo = #{  }, estaVivo=true)
	var espejoFantastico=new EspejoFantastico(capoQueLaPosee=archibaldo,lucha=0,hechiceria=0,oculto=false)
	var espadaDelDestino=new EspadaDelDestino(oculto=false)
	var collarDivino=new CollarDivino(oculto=false)
    var armadura = new Armadura()
    var viejoSabio = new ViejoSabio(valorHechiceriaDado = 1)
    
   

test "Rolando"{
	
	assert.equals(bandoDelSur,rolando.bando())
	assert.equals(1,rolando.valorLucha())
	assert.equals(3,rolando.valorHechiceria())
	assert.equals(0,rolando.equipo().size())

}

test "el Sur"{
	
	assert.equals(100,bandoDelSur.tesoro())
	assert.equals(50,bandoDelSur.reservaDeMateriales())
}

test "el Norte"{
	assert.equals(100,bandoDelSur.tesoro())
	assert.equals(50,bandoDelSur.reservaDeMateriales())
}

test "aumentando poder Rolando"{
	
	rolando.entrenarCuerpo(1)
	rolando.entrenarMente(1)
	assert.equals(2,rolando.valorLucha())
	assert.equals(4,rolando.valorHechiceria())
}

test "Caterina"{
	caterina.equipar(espadaDelDestino)
	assert.equals(bandoDelSur,rolando.bando())
	assert.equals(4,caterina.valorLucha())
	assert.equals(3,caterina.valorHechiceria())
	assert.equals(1,caterina.equipo().size())
}

test "rolando encuentra algo"{
	
	rolando.encontrar(espadaDelDestino)
	rolando.encontrar(collarDivino)
	assert.equals(5,rolando.valorLucha())
	assert.equals(4,rolando.valorHechiceria())	
}

test " Archibaldo"{
	archibaldo.equipar(espejoFantastico)
	archibaldo.equipar(collarDivino)
	assert.equals(bandoDelNorte,archibaldo.bando())
	assert.equals(3,archibaldo.valorLuchaBase())
	assert.equals(3,archibaldo.valorHechiceriaBase())
	assert.equals(2,archibaldo.equipo().size())
}

test "estado de Rolando"{
	
	assert.equals(true,rolando.estaVivo())
}

test "no estan muertos"{
	
	assert.notThat(not archibaldo.estaVivo())
	assert.notThat(not rolando.estaVivo())
}

test "estado de Archibaldo"{
	
	assert.equals(true,rolando.estaVivo())
}

test "rolando se encuentra a archibaldo" {
		rolando.encontrar(archibaldo) 
		assert.notThat(rolando.estaVivo())
	}
	
test "caterina se encuentra con rolando" {
		armadura.refuerzo(bendicion)
		caterina.encontrar(armadura)
		rolando.encontrar(caterina)
		assert.equals(2,rolando.equipo().size())
		assert.equals(4,rolando.valorHechiceria())
		assert.equals(6,rolando.valorLucha())
		assert.equals(0,caterina.equipo().size())	
		
}
	
	test "rolando se encuentra la armadura bendecida" {
		armadura.refuerzo(bendicion)
		rolando.encontrar(armadura)
		assert.that(rolando.valorHechiceria() == 4)
		assert.that(rolando.valorLucha() == 3)	
	}
	
	test "rolando encuentra al viejo sabio" {
		rolando.encontrar(viejoSabio)
		assert.that(rolando.valorHechiceria() == 4)
		assert.that(rolando.valorLucha() == 2)
	}
	
	test "rolando se encuentra con el viejo sabio la armadura bendecida, caterina y archibaldo" {
		rolando.encontrar(viejoSabio)
		armadura.refuerzo(bendicion)
		rolando.encontrar(armadura)
		rolando.encontrar(caterina)
		rolando.encontrar(archibaldo)
		assert.notThat(archibaldo.estaVivo())
	}
	
	test "rolando encuentra cosas "{
		armadura.refuerzo(bendicion)
		rolando.encontrar(armadura)
		assert.that(rolando.valorHechiceria() == 4)
		assert.that(rolando.valorLucha() == 3)	
		rolando.encontrar(espadaDelDestino)
		assert.that(rolando.valorHechiceria() == 4)
		assert.that(rolando.valorLucha() == 6)	
				
	}
}
/*Sabemos que el test rompe en cada parte donde se agrega a archibaldo y sabemos que es por el espejo. 
 * Lo que aun no entendemos es por que el espejo rompe.
 */
	